"""
ECN (expression and copy number, i.e. cDNA and pDNA) data analysis workflow

This workflow:

 - Extracts barcodes
 - Cluster barcodes with Starcode

The parameters are specified in a YAML configuration file.

Usage:

    snakemake --cores 24 --use-conda --snakefile /home/f.comoglio/gitlab/epmatrix/epsure_pipeline/v2/workflows/ecn.wf \
        --configfile /home/f.comoglio/gitlab/epmatrix/epsure_pipeline/v2/config/config_ecn.yaml

Author: Federico Comoglio; inspired by SnakeChunks
(kudos to Claire Rioualen, Jacques van Helden et al.)
"""

#================================================================#
# Python Imports

# from snakemake.utils import R
import os
import sys
import datetime
import re
import pandas as pd
from pathlib import Path
from os.path import join

# include set of python functions for e.g. parsing metadata
include: '/home/f.comoglio/gitlab/epmatrix/epsure_pipeline/v2/py/util.py'

#================================================================#
# Validate parameters

if not (('dir' in config.keys()) and ('fastq_dir' in config['dir'].keys())):
    sys.exit("The parameter config['dir']['fastq_dir'] should be specified in the config file.")

if not ('fastq_dir' in config['dir'].keys()):
    sys.exit("The parameter config['dir']['fastq_dir'] should be specified in the config file.")
else:
    fastq_dir = config['dir']['fastq_dir']

if not ('results' in config['dir'].keys()):
    sys.exit("The parameter config['dir']['results'] should be specified in the config file.")
else:
    results_dir = config['dir']['results']

#================================================================#
# Variables & directories

# Results Directory
res_dir          = config['dir']['results']

# Log Directory
log_dir          = config['dir']['logs']

# Enviroment directory
conda_env          = config['dir']['conda_env']

# mate suffix
mate_suffix      = config['metadata']['mate_suffix']

# input file extension
ext              = config['metadata']['input_format']

# Wilcards (capital)
# Sample identifiers = raw file name prefix
SAMPLE_IDS = os.listdir(fastq_dir)
# strip _mate
SAMPLE_IDS   = [sid[:-(len(mate_suffix) + len(ext) + 1)] for sid in SAMPLE_IDS]

print(SAMPLE_IDS)

#================================================================#
# Snakemake rules

# define directory containing snakemake rules
RULES = config['dir']['snakerules']

include: os.path.join(RULES, 'extract_barcodes_ecn.rules')
include: os.path.join(RULES, 'cluster_ecn_barcodes.rules')


#================================================================#
# Rule all

CLUST_BARCODES = expand(os.path.join(res_dir, '{ecn}_barcode_counts.tsv'), ecn = SAMPLE_IDS)

rule all:
    input:
        CLUST_BARCODES
    params:
	shell: "echo Job done `date '+%Y-%m-%d %H:%M'`"
